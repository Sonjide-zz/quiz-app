{"ast":null,"code":"var _jsxFileName = \"/Users/codeyourfuture/Documents/cyf/JS+ReactModule/quiz-react/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [question, setQuestion] = useState(\"\");\n  const [btnPressed, setBtnpress] = useState(false);\n  const [answers, setAnswers] = useState([]);\n  const [lives, setLives] = useState(3);\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    fetch(`https://opentdb.com/api.php?amount=3&difficulty=easy&encode=url3986`).then(res => res.json()).then(data => setQuestion(data.results[0]));\n  }, []);\n  useEffect(() => {\n    const unshuffledAnswers = [question.correct_answer, question.incorrect_answers];\n    const flattenedAnswers = unshuffledAnswers.flat();\n    const shuffled = flattenedAnswers.sort(() => Math.random() - 0.5);\n    setAnswers(shuffled);\n  }, [question]);\n\n  function onClickHandler() {\n    setBtnpress(true);\n  }\n\n  function onClickAnswer(answer) {\n    if (answer === question.correct_answer) {\n      setScore(score + 1);\n    } else {\n      setLives(lives - 1);\n    }\n\n    fetch(`https://opentdb.com/api.php?amount=3&difficulty=easy&encode=url3986`).then(res => res.json()).then(data => setQuestion(data.results[1]));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, btnPressed ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Lives:\", lives), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"/\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Score:\", score), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Game over. Result: \")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, decodeURIComponent(question.question)), answers.map(eachAnswer => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => onClickAnswer(eachAnswer),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, decodeURIComponent(eachAnswer));\n  })) : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \" Start!\"));\n}\n\nexport default App; //https://codesandbox.io/s/fetch-with-prop-updates-not-working-x1dox?file=/src/App.js\n//https://codesandbox.io/s/react-hotel-project-exercise-16-solution-8dnbv?file=/src/TableRow.js\n//https://reactjs.org/docs/typechecking-with-proptypes.html#default-prop-values\n//https://syllabus.codeyourfuture.io/react/week-2/lesson.html","map":{"version":3,"sources":["/Users/codeyourfuture/Documents/cyf/JS+ReactModule/quiz-react/src/App.js"],"names":["React","useState","useEffect","App","question","setQuestion","btnPressed","setBtnpress","answers","setAnswers","lives","setLives","score","setScore","fetch","then","res","json","data","results","unshuffledAnswers","correct_answer","incorrect_answers","flattenedAnswers","flat","shuffled","sort","Math","random","onClickHandler","onClickAnswer","answer","decodeURIComponent","map","eachAnswer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [question, setQuestion] = useState(\"\");\n  const [btnPressed, setBtnpress] = useState(false);\n  const [answers, setAnswers] = useState([]);\n  const [lives, setLives] = useState(3);\n  const [score, setScore] = useState(0);\n\n  useEffect(() => {\n    fetch(`https://opentdb.com/api.php?amount=3&difficulty=easy&encode=url3986`)\n      .then((res) => res.json())\n      .then((data) => setQuestion(data.results[0]));\n  }, []);\n\n  useEffect(() => {\n    const unshuffledAnswers = [\n      question.correct_answer,\n      question.incorrect_answers,\n    ];\n    const flattenedAnswers = unshuffledAnswers.flat();\n    const shuffled = flattenedAnswers.sort(() => Math.random() - 0.5);\n    setAnswers(shuffled);\n  }, [question]);\n\n  function onClickHandler() {\n    setBtnpress(true);\n  }\n\n  function onClickAnswer(answer) {\n    if (answer === question.correct_answer) {\n      setScore(score + 1);\n    } else {\n      setLives(lives - 1); \n\n    }\n    fetch(`https://opentdb.com/api.php?amount=3&difficulty=easy&encode=url3986`)\n      .then((res) => res.json())\n      .then((data) => setQuestion(data.results[1]));\n  }\n\n  return (\n    <div className=\"App\">\n      {btnPressed ? (\n        <div>\n          <div>\n            <p>Lives:{lives}</p>\n            <p>/</p>\n            <p>Score:{score}</p>\n            <p>Game over. Result: </p>\n          </div>\n          <p>{decodeURIComponent(question.question)}</p>\n          {answers.map((eachAnswer) => {\n            return (\n              <button onClick={() => onClickAnswer(eachAnswer)}>\n                {decodeURIComponent(eachAnswer)}\n              </button>\n            );\n          })}\n        </div>\n      ) : (\n        <button onClick={onClickHandler}> Start!</button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n//https://codesandbox.io/s/fetch-with-prop-updates-not-working-x1dox?file=/src/App.js\n\n//https://codesandbox.io/s/react-hotel-project-exercise-16-solution-8dnbv?file=/src/TableRow.js\n\n//https://reactjs.org/docs/typechecking-with-proptypes.html#default-prop-values\n//https://syllabus.codeyourfuture.io/react/week-2/lesson.html\n"]},"metadata":{},"sourceType":"module"}